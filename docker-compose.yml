---
version: "2.4"

x-builder-common:
  &builder-common
  labels:
    io.balena.features.optional: '1'
  privileged: true
  restart: always
  healthcheck:
    test: curl --silent --fail --unix-socket /var/run/balena-engine.sock http:/v1.41/_ping
    interval: 300s
    timeout: 60s
    retries: 5
    start_period: 30s
  tmpfs:
    - /tmp
    - /run
    - /var/run
  environment:
    BUILDER_WORKER_DNS: "1.1.1.1,1.0.0.1"
    BUILDER_WORKER_STORAGE_DRIVER: "overlay2"
    BUILDER_WORKER_STORAGE_OPTS: "overlay2.sync_diffs=false"
    BUILDER_WORKER_HOSTS: "unix:///var/run/balena-engine.sock,tcp://0.0.0.0:2376"
    BUILDER_WORKER_OOM_SCORE_ADJUST: "-999"
    BUILDER_WORKER_TLSVERIFY: "true"
  depends_on:
    - cert-manager

x-runner-common:
  &runner-common
  labels:
    io.balena.features.optional: '1'
  privileged: true
  healthcheck:
    test: |
      /bin/bash -c '\
        curl --silent --fail --unix-socket /var/run/docker.sock http:/v1.41/_ping && \
        pgrep Runner.Listener'
    interval: 300s
    timeout: 60s
    retries: 5
    start_period: 30s
  restart: always
  tmpfs:
    - /tmp
    - /run
    - /scratch
  environment:
    GITHUB_ENTERPRISE: balena
    VERBOSE: "false"
    ACTIONS_RUNNER_EPHEMERAL: "true"
    ACTIONS_RUNNER_WORK_DIRECTORY: /run/github/_work

services:
  builder-amd64:
    <<: *builder-common
    build: builder-amd64
    ports:
      - 2376:2376
    networks:
      - builder-amd64
    volumes:
      - builder-amd64:/var/lib/balena-engine
      - certs:/certs:ro

  builder-arm64v8:
    <<: *builder-common
    build: builder-arm64v8
    ports:
      - 2377:2376
    networks:
      - builder-arm64v8
    volumes:
      - builder-arm64v8:/var/lib/balena-engine
      - certs:/certs:ro

  builder-arm32v7:
    <<: *builder-common
    build: builder-arm32v7
    ports:
      - 2378:2376
    networks:
      - builder-arm32v7
    volumes:
      - builder-arm32v7:/var/lib/balena-engine
      - certs:/certs:ro
    command:
      - /usr/bin/setarch
      - linux32
      - /start-engine.sh

  builder-arm32v6:
    <<: *builder-common
    build: builder-arm32v6
    ports:
      - 2379:2376
    networks:
      - builder-arm32v6
    volumes:
      - builder-arm32v6:/var/lib/balena-engine
      - certs:/certs:ro
    command:
      - /usr/bin/setarch
      - linux32
      - --uname-2.6
      - /start-engine.sh

  runner-jammy-amd64:
    <<: *runner-common
    build: runner-jammy-amd64
    networks:
      - runner-jammy-amd64

  runner-focal-amd64:
    <<: *runner-common
    build: runner-focal-amd64
    networks:
      - runner-focal-amd64

  runner-jammy-arm64v8:
    <<: *runner-common
    build: runner-jammy-arm64v8
    networks:
      - runner-jammy-arm64v8

  runner-focal-arm64v8:
    <<: *runner-common
    build: runner-focal-arm64v8
    networks:
      - runner-focal-arm64v8

  runner-jammy-arm32v7:
    <<: *runner-common
    build: runner-jammy-arm32v7
    networks:
      - runner-jammy-arm32v7
    command:
      - /usr/bin/setarch
      - linux32
      - /start-runner.sh

  runner-focal-arm32v7:
    <<: *runner-common
    build: runner-focal-arm32v7
    networks:
      - runner-focal-arm32v7
    command:
      - /usr/bin/setarch
      - linux32
      - /start-runner.sh

  # https://github.com/balenablocks/cert-manager
  # https://certbot.eff.org/docs/using.html
  # https://certbot-dns-cloudflare.readthedocs.io/
  cert-manager:
    build: cert-manager
    restart: unless-stopped
    volumes:
      - cert-manager:/etc/letsencrypt
      - certs:/certs
    labels:
      io.balena.features.balena-api: 1
      io.balena.features.supervisor-api: 1

  # https://github.com/multiarch/qemu-user-static
  # https://hub.docker.com/r/multiarch/qemu-user-static
  qemu-user-static:
    build: qemu-user-static
    command: [ -p, yes ]
    privileged: true
    restart: no

# isolate container networks for security
networks:
  builder-amd64: {}
  builder-arm64v8: {}
  builder-arm32v7: {}
  builder-arm32v6: {}
  runner-focal-amd64: {}
  runner-focal-arm64v8: {}
  runner-focal-arm32v7: {}
  runner-jammy-amd64: {}
  runner-jammy-arm64v8: {}
  runner-jammy-arm32v7: {}

volumes:
  builder-amd64: {}
  builder-arm64v8: {}
  builder-arm32v7: {}
  builder-arm32v6: {}
  cert-manager: {}
  certs: {}
