---
# https://github.com/product-os/minio-init/blob/main/roles/minio-init/defaults/main.yml

# MinIO server connection details
minio_server_url: "{{ lookup('ansible.builtin.env', 'MINIO_SERVER_URL') }}"
minio_access_key: "{{ lookup('ansible.builtin.env', 'MINIO_ROOT_USER') }}"
minio_secret_key: "{{ lookup('ansible.builtin.env', 'MINIO_ROOT_PASSWORD') }}"

minio_buckets:
  - name: "actions-cache"
    state: present
    versioning: suspend
    expire_days: "{{ lookup('ansible.builtin.env', 'ACTIONS_CACHE_EXPIRE_DAYS') }}"
  - name: "yocto-cache"
    state: present
    versioning: suspend
    expire_days: "{{ lookup('ansible.builtin.env', 'YOCTO_CACHE_EXPIRE_DAYS') }}"

minio_users:
  - name: "actions-user"
    # Generate a random password as we will use access keys for access
    password: "{{ lookup('community.general.random_string', base64=true, length=30) }}"
    policies: ["readwrite"]
    state: present
  - name: "yocto-user"
    # Generate a random password as we will use access keys for access
    password: "{{ lookup('community.general.random_string', base64=true, length=30) }}"
    policies: ["readwrite"]
    state: present

minio_policies:
  - name: "readwrite-actions-cache"
    policy_file: "/config/policies/readwrite-actions-cache.json"
    state: present
  - name: "readwrite-yocto-cache"
    policy_file: "/config/policies/readwrite-yocto-cache.json"
    state: present

minio_access_keys:
  - name: "actions-svcacct"
    associated_user: "actions-user"
    state: present
    secret_key: "{{ lookup('ansible.builtin.env', 'ACTIONS_CACHE_SECRET_KEY') }}"
    description: "Access key for actions-user"
    policy_file: "/config/policies/readwrite-actions-cache.json"
  - name: "yocto-svcacct"
    associated_user: "yocto-user"
    state: present
    secret_key: "{{ lookup('ansible.builtin.env', 'YOCTO_CACHE_SECRET_KEY') }}"
    description: "Access key for yocto-user"
    policy_file: "/config/policies/readwrite-yocto-cache.json"
